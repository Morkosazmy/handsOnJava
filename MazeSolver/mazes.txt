8
0,0,0,1,1,1,1,1,1,0,1
1,0,1,0,1,1,0,1,0,1,1
1,1,0,0,1,0,0,0,0,0,1
0,1,0,0,1,0,0,1,0,1,1
0,1,1,1,1,2,0,1,1,1,1
0,0,0,0,1,1,0,1,0,1,1
1,1,0,0,1,0,0,0,0,1,1
1,1,0,0,1,0,0,0,0,0,1
7
10

		};
		m.maze = m_maze;
		
		m.start = new Position(7,10);
		
		m.path = new LinkedList<Position>();
		
		
		Maze n = new Maze();
		
		int[][] n_maze = {
				{0,0,0,1,1,1,1,1,1,1,1}, //0
				{1,0,1,0,1,1,0,1,0,1,1}, //1
				{1,1,0,0,1,0,0,0,0,0,1}, //2
				{0,1,0,0,1,0,0,1,0,1,1}, //3
				{0,1,1,1,1,2,0,1,1,1,1}, //4
				{0,0,0,0,1,1,0,1,0,1,1}, //5
				{1,1,0,0,1,0,0,0,0,1,1}, //6
				{1,1,0,0,1,0,0,0,0,0,1}  //7
			  // 0,1,2,3,4,5,6,7,8,9,10

		};
		n.maze = n_maze;
		
		n.start = new Position(4,3);
		
		n.path = new LinkedList<Position>();
		
		mazes.add(m);
		mazes.add(n);
		